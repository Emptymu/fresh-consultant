{"version":3,"sources":["webpack:///./src/components/Image.tsx","webpack:///./src/components/Box.tsx","webpack:///./src/components/Banner.tsx","webpack:///./src/pages/index.tsx","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"names":["Image","props","fluid","useStaticQuery","placeholderImage","childImageSharp","Object","keys","length","sizes","src","srcSet","Box","children","ratio","css","Banner","title","description","imgProps","console","log","colorBlack","colorWhite","IndexPage","bannerData","allImageSharp","nodes","map","filter","originalName","source","excluded","key","i","target","sourceKeys","indexOf","Layout","Container","cssStyles","colorSecondary"],"mappings":"4KAqCeA,EAtBqB,SAACC,GACjC,IAa2BC,EAbdC,yBAAe,aAYxBC,iBACIC,gBAAmBH,MAdgB,EAkBXI,OAAOC,KAAKN,GAAOO,OAAiBP,EAARC,EAApDO,EAlBmC,EAkBnCA,MAAOC,EAlB4B,EAkB5BA,IAAKC,EAlBuB,EAkBvBA,OACpB,OAAO,mBAAKF,MAAOA,EAAOC,IAAKA,EAAKC,OAAQA,K,8QCwBjCC,EAlDe,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,IAAaC,aAAb,MAAqB,KAArB,SAC1B,mBACIC,IAAKA,YAAF,+LAeoBD,EAfpB,QAmBH,mBACIC,IAAG,GAuBFF,K,YCPEG,EAjCW,SAAC,GAAqC,IAAnCC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SAE7C,OADAC,QAAQC,IAAIF,GAER,YAAC,EAAD,KACI,YAAC,EAAUA,GACX,mBACIJ,IAAKA,YAAF,oBACqBO,IADrB,mBAKP,mBACIP,IAAKA,YAAF,6HAUcQ,IAVd,OAcH,sBAAKN,GACL,qBAAIC,MCoDLM,UAjFG,WAAM,UAmBdC,EAAa,CACfR,MAAO,yCACPC,YAAa,+MAGbC,UAvBQ,UAAGhB,yBAAe,qBAAlB,iBAAG,EAWXuB,qBAXQ,iBAAG,EAWIC,aAXP,aAAG,EAWWC,KAAI,qBAAG1B,UAG5B2B,QAAO,kBAAiE,eAAjE,EAAGC,gBAEVF,KAAI,cAAGE,aAAH,OC5BE,SAAuCC,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAKC,EAFLC,EAAS,GACTC,EAAa9B,OAAOC,KAAKwB,GAG7B,IAAKG,EAAI,EAAGA,EAAIE,EAAW5B,OAAQ0B,IACjCD,EAAMG,EAAWF,GACbF,EAASK,QAAQJ,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAGvB,OAAOE,EDgBI,wBAA0F,IAUnG,OACI,YAACG,EAAA,EAAD,KACI,YAAC,IAAD,CAAKrB,MAAM,OAAOC,YAAY,sBAC9B,YAAC,EAAWO,GACZ,YAACc,EAAA,EAAD,CACIC,UAAS,0PASQC,IATR,8CAaT,2BACI,sCACA,wCACA,uNAKA,qOAKA,qKAIA,0DACA,kdAQJ,2BACI,oCACA,6CACA","file":"component---src-pages-index-tsx-167c21f3ce290e9c3ff7.js","sourcesContent":["import React, { FC } from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { GatsbyImageProps } from \"gatsby-image\";\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `useStaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `useStaticQuery`: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nconst Image: FC<GatsbyImageProps> = (props) => {\n    const data = useStaticQuery(graphql`\n        query {\n            placeholderImage: file(relativePath: { eq: \"gatsby-astronaut.png\" }) {\n                childImageSharp {\n                    fluid(maxWidth: 300) {\n                        ...GatsbyImageSharpFluid_noBase64\n                    }\n                }\n            }\n        }\n    `);\n    const {\n        placeholderImage: {\n            childImageSharp: { fluid }\n        }\n    } = data;\n\n    const { sizes, src, srcSet } = !Object.keys(props).length ? fluid : props;\n    return <img sizes={sizes} src={src} srcSet={srcSet} />;\n};\n\nexport default Image;\n","import React, { FC, ReactNode } from \"react\";\nimport { css } from \"@emotion/core\";\n\ninterface BoxPropsType {\n    children: ReactNode;\n    ratio?: number;\n}\n\nconst Box: FC<BoxPropsType> = ({ children, ratio = 36.9 }) => (\n    <div\n        css={css`\n            width: 100%;\n            overflow: hidden;\n            position: relative;\n            background-repeat: no-repeat;\n            background-size: cover;\n            background-position: center;\n\n            &::after,\n            &::before {\n                content: \"\";\n            }\n\n            &::after {\n                display: block;\n                padding-top: ${ratio}%;\n            }\n        `}\n    >\n        <div\n            css={css`\n                position: absolute;\n                width: 100%;\n                height: 100%;\n                background-repeat: no-repeat;\n                background-size: cover;\n                background-position: center;\n                img {\n                    object-fit: cover;\n                    display: block;\n                    height: 100%;\n                    width: 100%;\n                }\n\n                > div {\n                    position: absolute;\n                    left: 0;\n                    top: 0;\n                    width: 100%;\n                    height: 100%;\n                }\n            `}\n        >\n            {children}\n        </div>\n    </div>\n);\n\nexport default Box;\n","import React, { FC } from \"react\";\nimport { GatsbyImageProps } from \"gatsby-image\";\nimport { css } from \"@emotion/core\";\nimport Image from \"./Image\";\nimport Box from \"./Box\";\nimport { colorWhite, colorBlack } from \"./styles/config\";\n\ninterface Props {\n    title: string;\n    description: string;\n    imgProps: GatsbyImageProps;\n}\n\nconst Banner: FC<Props> = ({ title, description, imgProps }) => {\n    console.log(imgProps);\n    return (\n        <Box>\n            <Image {...imgProps} />\n            <div\n                css={css`\n                    background-color: ${colorBlack};\n                    opacity: 0.2;\n                `}\n            ></div>\n            <div\n                css={css`\n                    display: flex;\n                    flex-direction: column;\n                    align-items: center;\n                    justify-content: center;\n                    text-align: center;\n\n                    h1,\n                    p {\n                        max-width: 800px;\n                        color: ${colorWhite};\n                    }\n                `}\n            >\n                <h1>{title}</h1>\n                <p>{description}</p>\n            </div>\n        </Box>\n    );\n};\n\nexport default Banner;\n","/* eslint-disable @typescript-eslint/camelcase */\nimport React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { GatsbyImageProps } from \"gatsby-image\";\n\nimport Layout from \"../components/Layout\";\nimport SEO from \"../components/Seo\";\nimport Container from \"../components/Container\";\nimport Banner from \"../components/Banner\";\nimport { colorSecondary } from \"../components/styles/config\";\n\nconst IndexPage = () => {\n    const images = useStaticQuery(graphql`\n        query {\n            allImageSharp {\n                nodes {\n                    fluid {\n                        ...GatsbyImageSharpFluid_noBase64\n                        originalName\n                    }\n                }\n            }\n        }\n    `)?.allImageSharp?.nodes?.map(({ fluid }: { fluid: {} }) => fluid);\n\n    const bannerImageProps = images\n        .filter(({ originalName }: { originalName: string }) => originalName === `banner.jpg`)\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        .map(({ originalName, ...props }: { originalName: string; props: GatsbyImageProps }) => props)[0];\n\n    const bannerData = {\n        title: `We are your personal gardening advisor`,\n        description: `You have a garden that you grow in permaculture or we do and you would like to have the\n        advice of a pro to widen your possibilities, get better results and better understand your\n        garden?`,\n        imgProps: bannerImageProps\n    };\n\n    return (\n        <Layout>\n            <SEO title=\"Home\" description=\"Welcome to Gatsby\" />\n            <Banner {...bannerData} />\n            <Container\n                cssStyles={`\n                    padding: 3rem 0;\n                    margin-bottom: 1.5rem;\n\n                    section {\n                        margin-bottom: 1.5rem;\n                    }\n\n                    h2 {\n                        color: ${colorSecondary};\n                    }\n                `}\n            >\n                <section>\n                    <h2>Our Services</h2>\n                    <h3>To individuals</h3>\n                    <p>\n                        Garden cultivation, design, monitoring, harvesting / Transition of seasons / Springtime\n                        summer!Garden cultivation, design, monitoring, harvesting / Transition of seasons / Springtime\n                        summer!\n                    </p>\n                    <p>\n                        Gardening advice: You have a garden that you grow in permaculture or we do and you would like to\n                        have the advice of a pro to widen your possibilities, get better results and better understand\n                        your garden?\n                    </p>\n                    <p>\n                        A system of harvesting and distribution of surplus vegetables to individuals at solidarity\n                        prices for the benefit of vulnerable populations!\n                    </p>\n                    <h3>Communities and social landlords</h3>\n                    <p>\n                        Vegetation of public areas, via vegetable garden or open ground / reintroduction of agricultural\n                        knowledge among urban populations, Permaculture Workshop / Awareness raising about soil life,\n                        biodiversity and the growth process of vegetables! With the participation of the urban\n                        populations via participative workcamps (social link, common production, living together).\n                        Recycling of urban projects organic matter from the city (trees, etc.).\n                    </p>\n                </section>\n                <section>\n                    <h2>Contact Us</h2>\n                    <p>Email: foo@gmail.com</p>\n                    <p>xxx-123-456</p>\n                </section>\n            </Container>\n        </Layout>\n    );\n};\n\nexport default IndexPage;\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"sourceRoot":""}